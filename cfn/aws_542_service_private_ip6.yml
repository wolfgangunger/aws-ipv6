AWSTemplateFormatVersion: '2010-09-09'
Description: AWS Fargate Service in private subnet, but accessible via a public load balancer. IPv6
Parameters:

  ParentVPCStack:
    Description: "Stack name of the parent VPC stack"
    Type: String
    Default: IPv6VPC

  EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
        Default: fargate-example

  ServiceName:
    Type: String
    Default: httpd
    Description: A name for the service

  ImageUrl:
    Type: String
    Default: 243277030071.dkr.ecr.eu-west-1.amazonaws.com/ecs-repository-ipv6:httpd
    Description: The url of a docker image 
    
  ContainerPort:
    Type: Number
    Default: 80
    Description: What port number the application inside the docker container is binding to

  Path:
    Type: String
    Default: "*"
    Description: A path on the public load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.
  HealthCheckPath:
    Type: String
    Default: "/"
    Description: path for the LB healthcheck

  Priority:
    Type: Number
    Default: 1
    Description: The priority for the routing rule added to the load balancer.
                 This only applies if your have multiple services which have been
                 assigned to different paths on the load balancer.

  Role:
    Type: String
    Default: ""
    Description: (Optional) An IAM role to give the service's containers if the code within needs to
                 access other AWS resources like S3 buckets, DynamoDB tables, etc

Conditions:
  HasCustomRole: !Not [ !Equals [!Ref 'Role', ''] ]

Resources:

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Ref 'ServiceName'
      Cpu: 1024
      Memory: 2048
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn:
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ECSTaskExecutionRole']]
      TaskRoleArn:
        Fn::If:
          - 'HasCustomRole'
          - !Ref 'Role'
          - !Ref "AWS::NoValue"
      ContainerDefinitions:
        - Name: !Ref 'ServiceName'
          Cpu: 1024
          Memory: 2048
          Image: !Ref 'ImageUrl'
          PortMappings:
            - ContainerPort: !Ref 'ContainerPort'         
          # LogConfiguration:
          #     LogDriver: awslogs
          #     Options:
          #         awslogs-group: !Ref AWS::StackName
          #         awslogs-region: !Ref AWS::Region            

  # CloudWatchLogsGroup:
  #       Type: AWS::Logs::LogGroup
  #       Properties: 
  #           LogGroupName: !Ref AWS::StackName
  #           RetentionInDays: 365  

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Ref 'ServiceName'
      Cluster: 
        Fn::ImportValue:
          !Join [':', [!Ref 'EnvironmentName', 'ClusterName']]
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - Fn::ImportValue:
                !Join [':', [!Ref 'EnvironmentName', 'FargateContainerSecurityGroup']]
          Subnets:
            - Fn::ImportValue:
                !Join ['-', [!Ref 'ParentVPCStack', 'SubnetAPrivate']]
            - Fn::ImportValue:
                !Join ['-', [!Ref 'ParentVPCStack', 'SubnetBPrivate']]     
      TaskDefinition: !Ref 'TaskDefinition'




